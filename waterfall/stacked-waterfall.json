{
   "$schema":"https://vega.github.io/schema/vega/v5.json",
   "description":"An example of a Stacked waterfall chart for given data.",
   "background":"white",
   "padding":5,
   "width":900,
   "height":450,
   "style":"cell",
   "data":[
      {
         "name":"legend_opacity_store"
      },
      {
        "$comment": "Data Used for creating a waterfall chart",
         "name":"source_0",
         "url":"stacked-data.json",
         "format":{
            "type":"json"
         },
         "transform":[
            {
               "type":"window",
               "params":[
                  null
               ],
               "as":[
                  "sum"
               ],
               "ops":[
                  "sum"
               ],
               "fields":[
                  "amount"
               ],
               "sort":{
                  "field":[
                     
                  ],
                  "order":[
                     
                  ]
               }
            },
            {
               "type":"window",
               "params":[
                  null
               ],
               "as":[
                  "lead"
               ],
               "ops":[
                  "lead"
               ],
               "fields":[
                  "label"
               ],
               "sort":{
                  "field":[
                     
                  ],
                  "order":[
                     
                  ]
               }
            },
            {
               "type":"formula",
               "expr":"datum.lead === null ? datum.label : datum.lead",
               "as":"lead"
            },
            {
               "type":"formula",
               "expr":"datum.label === 'End' ? 0 : datum.sum - datum.amount",
               "as":"previous_sum"
            },
            {
               "type":"formula",
               "expr":"datum.label === 'End' ? datum.sum : datum.amount",
               "as":"amount"
            },
            {
               "type":"formula",
               "expr":"(datum.label !== 'Begin' && datum.label !== 'End' && datum.amount > 0 ? '+' : '') + datum.amount",
               "as":"text_amount"
            },
            {
               "type":"formula",
               "expr":"(datum.sum + datum.previous_sum) / 2",
               "as":"center"
            },
            {
               "type":"formula",
               "expr":"datum.sum < datum.previous_sum ? datum.sum : ''",
               "as":"sum_dec"
            },
            {
               "type":"formula",
               "expr":"datum.sum > datum.previous_sum ? datum.sum : ''",
               "as":"sum_inc"
            },
            {
               "type":"formula",
               "expr":"datum.sum > datum.previous_sum && datum.label != datum.lead ? datum.sum : ''",
               "as":"sum_total_inc"
            },
            {
               "type":"formula",
               "expr":"datum.sum < datum.previous_sum && datum.label !== datum.lead ? datum.sum : ''",
               "as":"sum_total_dec"
            }
         ]
      },
      {
         "name":"data_0",
         "source":"source_0",
         "transform":[
            {
               "type":"filter",
               "expr":"isValid(datum[\"previous_sum\"]) && isFinite(+datum[\"previous_sum\"])"
            }
         ]
      },
      {
         "name":"data_1",
         "source":"source_0",
         "transform":[
            {
               "type":"filter",
               "expr":"isValid(datum[\"sum\"]) && isFinite(+datum[\"sum\"])"
            }
         ]
      },
      {
         "name":"data_2",
         "source":"source_0",
         "transform":[
            {
               "type":"filter",
               "expr":"isValid(datum[\"sum_total_inc\"]) && isFinite(+datum[\"sum_total_inc\"])"
            }
         ]
      },
      {
         "name":"data_3",
         "source":"source_0",
         "transform":[
            {
               "type":"filter",
               "expr":"isValid(datum[\"sum_total_dec\"]) && isFinite(+datum[\"sum_total_dec\"])"
            }
         ]
      },
      {
         "name":"data_4",
         "source":"source_0",
         "transform":[
            {
               "type":"filter",
               "expr":"isValid(datum[\"center\"]) && isFinite(+datum[\"center\"])"
            }
         ]
      }
   ],
   "signals":[
      {
         "name":"unit",
         "value":{
            
         },
         "on":[
            {
               "events":"mousemove",
               "update":"isTuple(group()) ? group() : unit"
            }
         ]
      },
      {
         "name":"legend_opacity_category_legend",
         "value":null,
         "on":[
            {
               "events":[
                  {
                     "source":"view",
                     "type":"click",
                     "markname":"category_legend_symbols"
                  },
                  {
                     "source":"view",
                     "type":"click",
                     "markname":"category_legend_labels"
                  },
                  {
                     "source":"view",
                     "type":"click",
                     "markname":"category_legend_entries"
                  }
               ],
               "update":"datum.value || item().items[0].items[0].datum.value",
               "force":true
            },
            {
               "events":[
                  {
                     "source":"view",
                     "type":"click"
                  }
               ],
               "update":"!event.item || !datum ? null : legend_opacity_category_legend",
               "force":true
            }
         ]
      },
      {
         "name":"legend_opacity",
         "update":"vlSelectionResolve(\"legend_opacity_store\", \"union\", true, true)"
      },
      {
         "name":"legend_opacity_tuple",
         "update":"legend_opacity_category_legend !== null ? {fields: legend_opacity_tuple_fields, values: [legend_opacity_category_legend]} : null"
      },
      {
         "name":"legend_opacity_tuple_fields",
         "value":[
            {
               "type":"E",
               "field":"category"
            }
         ]
      },
      {
         "name":"legend_opacity_toggle",
         "value":false,
         "on":[
            {
               "events":{
                  "merge":[
                     {
                        "source":"view",
                        "type":"click"
                     }
                  ]
               },
               "update":"event.shiftKey"
            }
         ]
      },
      {
         "name":"legend_opacity_modify",
         "on":[
            {
               "events":{
                  "signal":"legend_opacity_tuple"
               },
               "update":"modify(\"legend_opacity_store\", legend_opacity_toggle ? null : legend_opacity_tuple, legend_opacity_toggle ? null : true, legend_opacity_toggle ? legend_opacity_tuple : null)"
            }
         ]
      },
      {
        "name":"markBarWidth",
        "value":45
     },
     {
       "name":"markLabelLimit",
       "value":50
    },
    {
       "name":"markXaxisTitle",
       "value":"Months"
    },
    {
       "name":"markYaxisTitle",
       "value":"Amount"
    },
    {
       "name":"markSumTextColor",
       "value":"#404040"
    },
     {
        "name":"markBeginEndFill",
        "value":"#B3B3B3"
     },
     {
        "name":"markLineStrokeColor",
        "value":"black"
     },
     
     {
        "name":"markTextColorInc",
        "value":"white"
     },
     {
        "name":"markLineStrokeWidth",
        "value":2
     },
     
     {
        "name":"markBarRadius",
        "value":2
     }
    
   ],
   "marks":[

      {  "$comment": "Mark used to create Bar",
         "name":"layer_0_marks",
         "type":"rect",
         "style":[
            "bar"
         ],
         "interactive":true,
         "from":{
            "data":"data_0"
         },
         "encode":{
            "update":{
               "fill":[
                  {
                     "test":"datum.label === 'Begin' || datum.label === 'End'",
                    "signal":"markBeginEndFill"
                  },
                  {
                     "scale":"color",
                     "field":"category"
                  }
               ],
               "opacity":[
                  {
                     "test":"!length(data(\"legend_opacity_store\")) || vlSelectionTest(\"legend_opacity_store\", datum)",
                     "value":1
                  },
                  {
                     "value":0.2
                  }
               ],
               "tooltip":{
                   "signal":"{\"Month\": isValid(datum[\"label\"]) ? datum[\"label\"] : \"\"+datum[\"label\"], \"Begin Amount \": isValid(datum[\"previous_sum\"]) ? datum[\"previous_sum\"] : \"\"+datum[\"previous_sum\"], \"End Amount \": format(datum[\"sum\"], \"\"), \"Diff-Amount\": format(datum[\"amount\"], \"\")}"
                },
               "ariaRoleDescription":{
                  "value":"bar"
               },
               "description":{
                  "signal":"\"label: \" + (isValid(datum[\"label\"]) ? datum[\"label\"] : \"\"+datum[\"label\"]) + \"; Amount: \" + (format(datum[\"previous_sum\"], \"$,f\")) + \"; sum: \" + (format(datum[\"sum\"], \"\")) + \"; category: \" + (isValid(datum[\"category\"]) ? datum[\"category\"] : \"\"+datum[\"category\"])"
               },
               "xc":{
                  "scale":"x",
                  "field":"label",
                  "band":0.5
               },
               "width":{
                  "signal":"markBarWidth"
               },
               "cornerRadius":{
                 "signal":"markBarRadius"
              },
               "y":{
                  "scale":"y",
                  "field":"previous_sum"
               },
               "y2":{
                  "scale":"y",
                  "field":"sum"
               }
            }
         }
      },
      {
        "$comment": "Mark used to create line above or below the bar",
         "name":"layer_1_marks",
         "type":"rule",
         "style":[
            "rule"
         ],
         "interactive":false,
         "from":{
            "data":"data_1"
         },
         "encode":{
            "update":{
               "opacity":{
                  "value":1
               },
               "strokeWidth":{
                  "signal":"markLineStrokeWidth"
               },
               "stroke":{
                  "signal":"markLineStrokeColor"
               },
               "description":{
                  "signal":"\"label: \" + (isValid(datum[\"label\"]) ? datum[\"label\"] : \"\"+datum[\"label\"]) + \"; sum: \" + (format(datum[\"sum\"], \"\")) + \"; lead: \" + (isValid(datum[\"lead\"]) ? datum[\"lead\"] : \"\"+datum[\"lead\"])"
               },
               "x":{
                  "scale":"x",
                  "field":"label",
                  "offset":-22.5,
                  "band":0.5
               },
               "x2":{
                  "scale":"x",
                  "field":"lead",
                  "offset":22.5,
                  "band":0.5
               },
               "y":{
                  "scale":"y",
                  "field":"sum"
               }
            }
         }
      },
      {
        "$comment": "Mark used to display Incremented value above the bar ",
         "name":"layer_2_marks",
         "type":"text",
         "style":[
            "text"
         ],
         "interactive":false,
         "from":{
            "data":"data_2"
         },
         "encode":{
            "update":{
               "baseline":{
                  "value":"bottom"
               },
               "dy":{
                  "value":-4
               },
               "fill":{
                  "signal":"markSumTextColor"
               },
               "description":{
                  "signal":"\"label: \" + (isValid(datum[\"label\"]) ? datum[\"label\"] : \"\"+datum[\"label\"]) + \"; sum_total_inc: \" + (format(datum[\"sum_total_inc\"], \"\"))"
               },
               "x":{
                  "scale":"x",
                  "field":"label",
                  "band":0.5
               },
               "y":{
                  "scale":"y",
                  "field":"sum_total_inc"
               },
               "text":[
                  {
                     "test":"datum.label === 'Begin' || datum.label === 'End'|| datum.sum_total_inc == 0",
                     "value":""
                  },
                  {
                     "signal":"format(datum[\"sum_total_inc\"], \"$,\")"
                  }
               ],
               "align":{
                  "value":"center"
               }
            }
         }
      },
      {
        "$comment": "Mark used to display decremented value below the bar ",
         "name":"layer_3_marks",
         "type":"text",
         "style":[
            "text"
         ],
         "interactive":false,
         "from":{
            "data":"data_3"
         },
         "encode":{
            "update":{
               "baseline":{
                  "value":"top"
               },
               "dy":{
                  "value":4
               },
               "fill":{
                  "signal":"markSumTextColor"
               },
               "description":{
                  "signal":"\"label: \" + (isValid(datum[\"label\"]) ? datum[\"label\"] : \"\"+datum[\"label\"]) + \"; sum_total_dec: \" + (format(datum[\"sum_total_dec\"], \"\"))"
               },
               "x":{
                  "scale":"x",
                  "field":"label",
                  "band":0.5
               },
               "y":{
                  "scale":"y",
                  "field":"sum_total_dec"
               },
               "text":[
                  {
                     "test":"datum.label === 'Begin' || datum.label === 'End'|| datum.sum_total_dec == 0",
                     "value":""
                  },
                  {
                     "signal":"format(datum[\"sum_total_dec\"], \"$,\")"
                  }
               ],
               "align":{
                  "value":"center"
               }
            }
         }
      },
      {
        "$comment": "Mark used to display text inside the bar ",
         "name":"layer_4_marks",
         "type":"text",
         "style":[
            "text"
         ],
         "interactive":false,
         "from":{
            "data":"data_4"
         },
         "encode":{
            "update":{
               "baseline":{
                  "value":"middle"
               },
               "fontWeight":{
                  "value":"bold"
               },
               "fill":[
                  {
                     "test":"datum.label === 'Begin' || datum.label === 'End'",
                     "signal":"markSumTextColor"
                  },
                  {
                     "signal":"markTextColorInc"
                  }
               ],
               "description":{
                  "signal":"\"label: \" + (isValid(datum[\"label\"]) ? datum[\"label\"] : \"\"+datum[\"label\"]) + \"; center: \" + (format(datum[\"center\"], \"\")) + \"; text_amount: \" + (format(datum[\"text_amount\"], \"$,\"))"
               },
               "x":{
                  "scale":"x",
                  "field":"label",
                  "band":0.5
               },
               "y":{
                  "scale":"y",
                  "field":"center"
               },
               "text":{
                  "signal":"format(datum[\"text_amount\"], \"$,\")"
               },
               "align":{
                  "value":"center"
               }
            }
         }
      }
   ],
   "scales":[
      {"$comment": "Scale for X-axis ",
         "name":"x",
         "type":"band",
         "domain":{
            "fields":[
               {
                  "data":"data_0",
                  "field":"label"
               },
               {
                  "data":"data_1",
                  "field":"label"
               },
               {
                  "data":"data_1",
                  "field":"lead"
               },
               {
                  "data":"data_2",
                  "field":"label"
               },
               {
                  "data":"data_3",
                  "field":"label"
               },
               {
                  "data":"data_4",
                  "field":"label"
               }
            ]
         },
         "range":[
            0,
            {
               "signal":"width"
            }
         ],
         "paddingInner":0.1,
         "paddingOuter":0.05
      },
      {
         "name":"y",
         "type":"linear",
         "domain":{
            "fields":[
               {
                  "data":"data_0",
                  "field":"previous_sum"
               },
               {
                  "data":"data_0",
                  "field":"sum"
               },
               {
                  "data":"data_1",
                  "field":"sum"
               },
               {
                  "data":"data_2",
                  "field":"sum_total_inc"
               },
               {
                  "data":"data_3",
                  "field":"sum_total_dec"
               },
               {
                  "data":"data_4",
                  "field":"center"
               }
            ]
         },
         "range":[
            {
               "signal":"height"
            },
            0
         ],
         "nice":true,
         "zero":true
      },
      {
        "$comment": "Color Scheme for the chart",
         "name":"color",
         "type":"ordinal",
         "domain":[
            "A",
            "B",
            "C"
         ],
         "range":[
            "#2A71A4",
            "#70C2FE",
            "#DB6C03"
         ],
         "interpolate":"hcl"
      }
   ],
   "axes":[
      {
        "$comment": "mark for Y-axis ",
         "scale":"y",
         "orient":"left",
         "gridScale":"x",
         "grid":false,
         "tickCount":{
            "signal":"ceil(height/40)"
         },
         "domain":false,
         "labels":false,
         "aria":false,
         "maxExtent":0,
         "minExtent":0,
         "ticks":false,
         "zindex":0
      },
      { "$comment": "mark for x-axis ",
         "scale":"x",
         "orient":"bottom",
         "grid":false,
         "title":{"signal":"markXaxisTitle"},
         "labelAngle":0,
         "labelLimit":{"signal":"markLabelLimit"},
         "labelBaseline":"top",
         "zindex":0
      },
      {
         "scale":"y",
         "orient":"left",
         "grid":false,
         "title":{"signal":"markYaxisTitle"},
         "format":"$,f",
         "formatType":"number",
         "labelOverlap":true,
         "tickCount":{
            "signal":"ceil(height/40)"
         },
         "zindex":0
      }
   ],
   "legends":[
      {
        "$comment": "Mark for the Legend",
         "fill":"color",
         "symbolType":"square",
         "title":"category",
         "encode":{
            "labels":{
               "name":"category_legend_labels",
               "interactive":true,
               "update":{
                  "opacity":[
                     {
                        "test":"(!length(data(\"legend_opacity_store\")) || (legend_opacity[\"category\"] && indexof(legend_opacity[\"category\"], datum.value) >= 0))",
                        "value":1
                     },
                     {
                        "value":0.35
                     }
                  ]
               }
            },
            "symbols":{
               "name":"category_legend_symbols",
               "interactive":true,
               "update":{
                  "opacity":[
                     {
                        "test":"(!length(data(\"legend_opacity_store\")) || (legend_opacity[\"category\"] && indexof(legend_opacity[\"category\"], datum.value) >= 0))",
                        "value":1
                     },
                     {
                        "value":0.35
                     }
                  ]
               }
            },
            "entries":{
               "name":"category_legend_entries",
               "interactive":true,
               "update":{
                  "fill":{
                     "value":"transparent"
                  }
               }
            }
         }
      }
   ],
   "config":{
      "mark":{
         "font":"Open Sans"
      },
      "axis":{
         "labelFont":"Open Sans",
         "titleFont":"Open Sans"
      },
      "legend":{
         "labelFont":"Open Sans",
         "titleFont":"Open Sans"
      },
      "style":{
         "cell":{
            "stroke":null
         },
         "text":{
            "fontWeight":"bold"
         },
         "group-title":{
            "font":"Open Sans",
            "fontWeight":"bold"
         }
      },
      "title":{
         "subtitleFont":"Open Sans"
      }
   }
}