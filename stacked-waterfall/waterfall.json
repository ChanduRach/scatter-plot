{
  "$schema":"https://vega.github.io/schema/vega/v5.json",
  "description":"An example of a waterfall chart for given data.",
  "background":"white",
  "padding":5,
  "width":900,
  "height":450,
  "data":[
     {
        "name":"markhoverBar_store"
     },
     {
        "name":"select_store"
     },
     {
        "name":"markbarOpacity_store"
     },
     {
        "name":"markintermediateBar_opacity_store"
     },
     {
      "$comment": "Data Used for creating a waterfall chart",
        "name":"source_0",
        "url":"waterfall-data.json",
        "format":{
           "type":"json"
        },
        "transform":[
           {
              "type":"identifier",
              "as":"_vgsid_"
           },
           {
              "type":"window","as":["sum"],"ops":["sum"],"fields":["amount"]
            },
           {
              "type":"window","as":["lead"], "ops":["lead"],"fields":["label"]
           },
           {
              "type":"formula",
              "expr":"datum.lead === null ? datum.label : datum.lead",
              "as":"lead"
           },
           {
              "type":"formula",
              "expr":"datum.label === 'End' ? 0 : datum.sum - datum.amount",
              "as":"previous_sum"
           },
           {
              "type":"formula",
              "expr":"datum.amount=== ''? datum.sum : ''",
              "as":"intermediate"
           },
           {
              "type":"formula",
              "expr":"datum.label === 'End' ? datum.sum : datum.amount",
              "as":"amount"
           },
           {
              "type":"formula",
              "expr":"(datum.label !== 'Begin' && datum.label !== 'End' && datum.amount > 0 ? '+' : '') + datum.amount",
              "as":"text_amount"
           },
           {
              "type":"formula",
              "expr":"(datum.label === 'Begin' || datum.label == 'End') ? '' :datum.amount",
              "as":"values"
           },
           {
              "type":"formula",
              "expr":"(datum.sum + datum.previous_sum) / 2",
              "as":"center"
           },
           {
              "type":"formula",
              "expr":"(datum.intermediate) / 2",
              "as":"center_inter"
           },
           {
              "type":"formula",
              "expr":"datum.sum < datum.previous_sum ? datum.sum-datum.previous_sum : ''",
              "as":"dec"
           },
           {
              "type":"formula",
              "expr":"datum.sum > datum.previous_sum ? datum.sum-datum.previous_sum : ''",
              "as":"inc"
           },
           {
              "type":"formula",
              "expr":"datum.sum < datum.previous_sum ? datum.sum : ''",
              "as":"sum_dec"
           },
           {
              "type":"formula",
              "expr":"datum.sum > datum.previous_sum ? datum.sum : ''",
              "as":"sum_inc"
           },
           {
              "type":"formula",
              "expr":"datum.amount > 0 ? 'positive': 'negative'",
              "as":"sign_bar"
           }
        ]
     },
     {
        "name":"data_1",
        "source":"source_0",
        "transform":[
           {
              "type":"filter",
              "expr":"isValid(datum[\"previous_sum\"]) && isFinite(+datum[\"previous_sum\"]) && isValid(datum[\"values\"]) && isFinite(+datum[\"values\"])"
           }
        ]
     },
     {
        "name":"data_2",
        "source":"source_0",
        "transform":[
           {
              "type":"stack",
              "groupby":[
                 "label"
              ],
              "field":"intermediate",
              "sort":{
                 "field":[
                    
                 ],
                 "order":[
                    
                 ]
              },
              "as":[
                 "intermediate_start",
                 "intermediate_end"
              ],
              "offset":"zero"
           },
           {
              "type":"filter",
              "expr":"isValid(datum[\"intermediate\"]) && isFinite(+datum[\"intermediate\"])"
           }
        ]
     },
     {
        "name":"data_3",
        "source":"source_0",
        "transform":[
           {
              "type":"filter",
              "expr":"isValid(datum[\"sum\"]) && isFinite(+datum[\"sum\"])"
           }
        ]
     },
     {
        "name":"data_4",
        "source":"source_0",
        "transform":[
           {
              "type":"filter",
              "expr":"isValid(datum[\"sum_inc\"]) && isFinite(+datum[\"sum_inc\"])"
           }
        ]
     },
     {
        "name":"data_5",
        "source":"source_0",
        "transform":[
           {
              "type":"filter",
              "expr":"isValid(datum[\"sum_dec\"]) && isFinite(+datum[\"sum_dec\"])"
           }
        ]
     },
     {
        "name":"data_6",
        "source":"source_0",
        "transform":[
           {
              "type":"filter",
              "expr":"isValid(datum[\"previous_sum\"]) && isFinite(+datum[\"previous_sum\"])"
           }
        ]
     },
     {
        "name":"data_7",
        "source":"source_0",
        "transform":[
           {
              "type":"filter",
              "expr":"isValid(datum[\"center_inter\"]) && isFinite(+datum[\"center_inter\"])"
           }
        ]
     }
  ],
  "signals":[
     {
        "name":"unit",
        "value":{
           
        },
        "on":[
           {
              "events":"mousemove",
              "update":"isTuple(group()) ? group() : unit"
           }
        ]
     },
     {
        "name":"markHoverBar",
        "update":"vlSelectionResolve(\"markhoverBar_store\", \"union\", true, true)"
     },
     {
        "name":"select",
        "update":"vlSelectionResolve(\"select_store\", \"union\", true, true)"
     },
     {
        "name":"markbarOpacity",
        "update":"vlSelectionResolve(\"markbarOpacity_store\", \"union\", true, true)"
     },
     {
        "name":"markintermediateBar_opacity",
        "update":"vlSelectionResolve(\"markintermediateBar_opacity_store\", \"union\", true, true)"
     },
     {
      "$comment": "Signal Used to Change the width of the bar",
        "name":"markBarWidth",
        "value":45
     },
     {
      "$comment": "Signal Used to change the Reference Line",
      "name":"markReferenceLine",
      "value":2000
      },     
      {
      "$comment": "Signal Used to change the  width of the label to avoid Overlapping",
         "name":"markLabelLimit",
          "value":50
      },

      {
      "$comment": "Signal Used for Changing Title of the x-axis",
      "name":"markXaxisTitle",
      "value":"Months"
      },

      {
      "$comment": "Signal Used for Changing Title of the y-axis",
      "name":"markYaxisTitle",
      "value":"Amount"
      },

      {
      "$comment": "Signal Used for Changing Color of the Total Sum displayed at the top and bottom of the bar",
      "name":"markSumTextColor",
      "value":"#404040"
      },
     {
      "$comment": "Signal Used for Changing Color Schemes for the bar",
      "name":"markBarFill",
      "value":"greens"
     },
     {
      "$comment": "Signal Used for Changing Color For the Intermediate Bar",
      "name":"markIntermediateBarFill",
      "value":"#FFF3E7"
     },
     {
      "$comment": "Signal Used for Changing Color of the Begin & End Bar",
      "name":"markBeginEndFill",
      "value":"#B3B3B3"
     },
     {
      "$comment": "Signal Used for Changing Color of the connecting lines b/w bars and Reference Line",
      "name":"markLineStrokeColor",
      "value":"black"
     },
     {
      "$comment": "Signal Used for Changing Color of the Decremented Text which is inside the Bar",
      "name":"markTextColorDec",
      "value":"white"
     },
     {
      "$comment": "Signal Used for Changing Color of the Incremented Text which is inside the Bar",
      "name":"markTextColorInc",
      "value":"white"
     },
     {
      "$comment": "Signal Used for Changing Color of the X-axis",
        "name":"markXaxisDomainColor",
        "value":"lightgrey"
     },
     {
      "$comment": "Signal Used for Changing Color of the Y-axis",
      "name":"markYaxisDomainColor",
      "value":"lightgrey"
     },
     {
      "$comment": "Signal Used for Changing Width of the Connecting line b/w bars & Reference Line",
      "name":"markLineStrokeWidth",
      "value":2
     },
     {
      "$comment": "Signal Used for Changing Opacity of the Connecting line b/w bars & Reference Line",
      "name":"markStrokeOpacity",
      "value":1
     },
     {
      "$comment": "Signal Used for Changing radius of the bar",  
      "name":"markBarRadius",
       "value":2
     },
     {
      "$comment": "Signal Used for padding b/w  the labels",  
      "name":"markLabelPadding",
      "value":5
     },
     {
      "$comment": "Signal Used for Changing Font-size of the labels in both X-axis and Y-axis",
      "name":"markLabelFontSize",
      "value":12
     },
     {
      "$comment": "Signal Used for Changing the dash property of  Connecting lines & Reference Line",
      "name":"markStrokeDash",
      "value":[1,0]
     },
     {
      "$comment": "Signal Used for Changing the label position",
      "name":"markLabelAnchor",
      "value":"middle"
     },
     {
      "$comment": "Signal Used for Changing the label Angel",
      "name":"markLabelAngle",
      "value":"0"
     },
     {
      "$comment": "Signal Used for Changing the Tick size of the labels",
      "name":"markTickFontSize",
      "value":5
     },
     {
      "$comment": "Signal Used for Changing the Color of the labels",
      "name":"markLabelColor",
      "value":"black"
     },
     {
        "name":"markhoverBar_tuple",
        "on":[
           {
              "events":[
                 {
                    "source":"scope",
                    "type":"mouseover"
                 }
              ],
              "update":"datum && item().mark.marktype !== 'group' ? {unit: \"layer_0\", fields: markhoverBar_tuple_fields, values: [(item().isVoronoi ? datum.datum : datum)[\"_vgsid_\"]]} : null",
              "force":true
           },
           {
              "events":[
                 {
                    "source":"view",
                    "type":"dblclick"
                 }
              ],
              "update":"null"
           }
        ]
     },
     {
        "name":"markhoverBar_tuple_fields",
        "value":[
           {
              "type":"E",
              "field":"_vgsid_"
           }
        ]
     },
     {
        "name":"markhoverBar_toggle",
        "value":false,
        "on":[
           {
              "events":[
                 {
                    "source":"scope",
                    "type":"mouseover"
                 }
              ],
              "update":"event.shiftKey"
           },
           {
              "events":[
                 {
                    "source":"view",
                    "type":"dblclick"
                 }
              ],
              "update":"false"
           }
        ]
     },
     {
        "name":"markhoverBar_modify",
        "on":[
           {
              "events":{
                 "signal":"markhoverBar_tuple"
              },
              "update":"modify(\"markhoverBar_store\", markhoverBar_toggle ? null : markhoverBar_tuple, markhoverBar_toggle ? null : true, markhoverBar_toggle ? markhoverBar_tuple : null)"
           }
        ]
     },
     {
        "name":"select_tuple",
        "on":[
           {
              "events":[
                 {
                    "source":"scope",
                    "type":"click"
                 }
              ],
              "update":"datum && item().mark.marktype !== 'group' ? {unit: \"layer_0\", fields: select_tuple_fields, values: [(item().isVoronoi ? datum.datum : datum)[\"_vgsid_\"]]} : null",
              "force":true
           },
           {
              "events":[
                 {
                    "source":"view",
                    "type":"dblclick"
                 }
              ],
              "update":"null"
           }
        ]
     },
     {
        "name":"select_tuple_fields",
        "value":[
           {
              "type":"E",
              "field":"_vgsid_"
           }
        ]
     },
     {
        "name":"select_toggle",
        "value":false,
        "on":[
           {
              "events":[
                 {
                    "source":"scope",
                    "type":"click"
                 }
              ],
              "update":"event.shiftKey"
           },
           {
              "events":[
                 {
                    "source":"view",
                    "type":"dblclick"
                 }
              ],
              "update":"false"
           }
        ]
     },
     {
        "name":"select_modify",
        "on":[
           {
              "events":{
                 "signal":"select_tuple"
              },
              "update":"modify(\"select_store\", select_toggle ? null : select_tuple, select_toggle ? null : true, select_toggle ? select_tuple : null)"
           }
        ]
     },
     {
        "name":"markbarOpacity_tuple",
        "on":[
           {
              "events":[
                 {
                    "source":"scope",
                    "type":"click"
                 }
              ],
              "update":"datum && item().mark.marktype !== 'group' ? {unit: \"layer_0\", fields: markbarOpacity_tuple_fields, values: [(item().isVoronoi ? datum.datum : datum)[\"sign_bar\"]]} : null",
              "force":true
           },
           {
              "events":[
                 {
                    "source":"view",
                    "type":"dblclick"
                 }
              ],
              "update":"null"
           }
        ]
     },
     {
        "name":"markbarOpacity_tuple_fields",
        "value":[
           {
              "type":"E",
              "field":"sign_bar"
           }
        ]
     },
     {
        "name":"markbarOpacity_toggle",
        "value":false,
        "on":[
           {
              "events":[
                 {
                    "source":"scope",
                    "type":"click"
                 }
              ],
              "update":"event.shiftKey"
           },
           {
              "events":[
                 {
                    "source":"view",
                    "type":"dblclick"
                 }
              ],
              "update":"false"
           }
        ]
     },
     {
        "name":"markbarOpacity_modify",
        "on":[
           {
              "events":{
                 "signal":"markbarOpacity_tuple"
              },
              "update":"modify(\"markbarOpacity_store\", markbarOpacity_toggle ? null : markbarOpacity_tuple, markbarOpacity_toggle ? null : true, markbarOpacity_toggle ? markbarOpacity_tuple : null)"
           }
        ]
     },
     {
        "name":"markintermediateBar_opacity_tuple",
        "on":[
           {
              "events":[
                 {
                    "source":"scope",
                    "type":"click"
                 }
              ],
              "update":"datum && item().mark.marktype !== 'group' ? {unit: \"layer_1\", fields: markintermediateBar_opacity_tuple_fields, values: [(item().isVoronoi ? datum.datum : datum)[\"sign_bar\"]]} : null",
              "force":true
           },
           {
              "events":[
                 {
                    "source":"view",
                    "type":"dblclick"
                 }
              ],
              "update":"null"
           }
        ]
     },
     {
        "name":"markintermediateBar_opacity_tuple_fields",
        "value":[
           {
              "type":"E",
              "field":"sign_bar"
           }
        ]
     },
     {
        "name":"markintermediateBar_opacity_toggle",
        "value":false,
        "on":[
           {
              "events":[
                 {
                    "source":"scope",
                    "type":"click"
                 }
              ],
              "update":"event.shiftKey"
           },
           {
              "events":[
                 {
                    "source":"view",
                    "type":"dblclick"
                 }
              ],
              "update":"false"
           }
        ]
     },
     {
        "name":"markintermediateBar_opacity_modify",
        "on":[
           {
              "events":{
                 "signal":"markintermediateBar_opacity_tuple"
              },
              "update":"modify(\"markintermediateBar_opacity_store\", markintermediateBar_opacity_toggle ? null : markintermediateBar_opacity_tuple, markintermediateBar_opacity_toggle ? null : true, markintermediateBar_opacity_toggle ? markintermediateBar_opacity_tuple : null)"
           }
        ]
     }
  ],
  "marks":[
     {
      "$comment": "Mark used to create Bar",
        "name":"layer_0_marks",
        "type":"rect",
        "style":[
           "bar"
        ],
        "interactive":true,
        "from":{
           "data":"data_1"
        },
        "encode":{
           "update":{
              "stroke":{
                 "signal":"datum.label=='Begin' || datum.label=='End' ? ' ':(datum.values > 0? 'blue':'red')"
              },
              "cornerRadius":{
                 "signal":"markBarRadius"
              },
              "fill":[
                 {
                    "test":"datum.label === 'Begin' || datum.label === 'End'",
                    "signal":"markBeginEndFill"
                 },
                 {
                    "scale":"color",
                    "field":"values"
                 }
              ],
              "opacity":[
                 {
                    "test":"!length(data(\"markbarOpacity_store\")) || vlSelectionTest(\"markbarOpacity_store\", datum)",
                    "value":1
                 }
              ],
              "fillOpacity":[
                 {
                    "test":"!length(data(\"select_store\")) || vlSelectionTest(\"select_store\", datum)",
                    "value":1
                 },
                 {
                    "value":0.3
                 }
              ],
              "strokeWidth":[
                 {
                    "test":"length(data(\"select_store\")) && vlSelectionTest(\"select_store\", datum)",
                    "value":2
                 },
                 {
                    "test":"length(data(\"markhoverBar_store\")) && vlSelectionTest(\"markhoverBar_store\", datum)",
                    "value":5
                 },
                 {
                    "value":0
                 }
              ],
              "tooltip":{
                 "signal":"{\"Month\": isValid(datum[\"label\"]) ? datum[\"label\"] : \"\"+datum[\"label\"], \"Begin Amount\": isValid(datum[\"previous_sum\"]) ? datum[\"previous_sum\"] : \"\"+datum[\"previous_sum\"], \"End Amount\": format(datum[\"sum\"], \"\"), \"Diff Amount\": format(datum[\"amount\"], \"\")}"
              },
              "ariaRoleDescription":{
                 "value":"bar"
              },
              "description":{
                 "signal":"\"label: \" + (isValid(datum[\"label\"]) ? datum[\"label\"] : \"\"+datum[\"label\"]) + \"; Amount: \" + (format(datum[\"previous_sum\"], \"$,f\")) + \"; sum: \" + (format(datum[\"sum\"], \"\")) + \"; values: \" + (format(datum[\"values\"], \"\")) + \"; Month: \" + (isValid(datum[\"label\"]) ? datum[\"label\"] : \"\"+datum[\"label\"]) + \"; Begning Amount : \" + (isValid(datum[\"previous_sum\"]) ? datum[\"previous_sum\"] : \"\"+datum[\"previous_sum\"]) + \"; End Amount : \" + (format(datum[\"sum\"], \"\")) + \"; Diff Amount: \" + (format(datum[\"amount\"], \"\"))"
              },
              "xc":{
                 "scale":"x",
                 "field":"label",
                 "band":0.5
              },
              "width":{
                 "signal":"markBarWidth"
              },
              "y":{
                 "scale":"y",
                 "field":"previous_sum"
              },
              "y2":{
                 "scale":"y",
                 "field":"sum"
              }
           }
        }
     },
     {
      "$comment": "Mark used to create Intermediate Bar",
        "name":"layer_1_marks",
        "type":"rect",
        "style":[
           "bar"
        ],
        "interactive":true,
        "from":{
           "data":"data_2"
        },
        "encode":{
           "update":{
              "fill":{
                 "signal":"markIntermediateBarFill"
              },
              "cornerRadius":{

               "signal":"markBarRadius"

            },
              "opacity":[
                 {
                    "test":"!length(data(\"markbarOpacity_store\")) || vlSelectionTest(\"markbarOpacity_store\", datum)",
                    "value":1
                 }
              ],
              "fillOpacity":[

               {

                  "test":"!length(data(\"select_store\")) || vlSelectionTest(\"select_store\", datum)",

                  "value":1

               },

               {

                  "value":0.3

               }

            ],
              "tooltip":{
                  "signal":"{\"Month\": isValid(datum[\"label\"]) ? datum[\"label\"] : \"\"+datum[\"label\"], \"Begin Amount\": isValid(datum[\"previous_sum\"]) ? datum[\"previous_sum\"] : \"\"+datum[\"previous_sum\"], \"End Amount\": format(datum[\"sum\"], \"\"), \"Diff Amount\": format(datum[\"amount\"], \"\")}"
               },
              "ariaRoleDescription":{
                 "value":"bar"
              },
              "description":{
                 "signal":"\"label: \" + (isValid(datum[\"label\"]) ? datum[\"label\"] : \"\"+datum[\"label\"]) + \"; Amount: \" + (format(datum[\"intermediate\"], \"\"))"
              },
              "xc":{
                 "scale":"x",
                 "field":"label",
                 "band":0.5
              },
              "width":{
                "signal": "markBarWidth"
              },
              "y":{
                 "scale":"y",
                 "field":"intermediate_end"
              },
              "y2":{
                 "scale":"y",
                 "field":"intermediate_start"
              }
           }
        }
     },
     {
      "$comment": "Mark used to create line above and below the bar",
        "name":"layer_2_marks",
        "type":"rule",
        "style":[
           "rule"
        ],
        "interactive":false,
        "from":{
           "data":"data_3"
        },
        "encode":{
           "update":{
              "opacity":{
                 "signal":"markStrokeOpacity"
              },
              "strokeWidth":{
                 "signal":"markLineStrokeWidth"
              },
              "strokeDash":{
                 "signal":"markStrokeDash"
              },
              "stroke":{
                 "signal":"markLineStrokeColor"
              },
              "description":{
                 "signal":"\"label: \" + (isValid(datum[\"label\"]) ? datum[\"label\"] : \"\"+datum[\"label\"]) + \"; sum: \" + (format(datum[\"sum\"], \"\")) + \"; lead: \" + (isValid(datum[\"lead\"]) ? datum[\"lead\"] : \"\"+datum[\"lead\"])"
              },
              "x":{
                 "scale":"x",
                 "field":"label",
                 "offset":-22.5,
                 "band":0.5
              },
              "x2":{
                 "scale":"x",
                 "field":"lead",
                 "offset":22.5,
                 "band":0.5
              },
              "y":{
                 "scale":"y",
                 "field":"sum"
              }
           }
        }
     },
     {
      "$comment": "Mark used to create Reference Line",
        "name":"layer_3_marks",
        "type":"line",
        "style":[
           "line"
        ],
        "interactive":false,
        "from":{
           "data":"source_0"
        },
        "encode":{
           "update":{
              "opacity":{
                 "signal":"markStrokeOpacity"
              },
              "strokeWidth":{
                 "signal":"markLineStrokeWidth"
              },
              "strokeDash":{
                 "signal":"markStrokeDash"
              },
              "stroke":{
                 "signal":"markLineStrokeColor"
              },
              "description":{
                 "signal":"\"label: \" + (isValid(datum[\"label\"]) ? datum[\"label\"] : \"\"+datum[\"label\"])"
              },
              "x":{
                 "scale":"x",
                 "field":"label",
                 "offset":-22.5,
                 "band":0.5
              },
              "y":{
                 "scale":"y",
                 "signal":"markReferenceLine"
              }
           }
        }
     },
     {
      "$comment": "Mark used to create Axis",
        "name":"layer_4_marks",
        "type":"line",
        "style":[
           "line"
        ],
        "interactive":false,
        "from":{
           "data":"source_0"
        },
        "encode":{
           "update":{
              "stroke":{
                 "value":"#4c78a8"
              },
              "description":{
                 "signal":"\"label: \" + (isValid(datum[\"label\"]) ? datum[\"label\"] : \"\"+datum[\"label\"])"
              },
              "x":{
                 "scale":"x",
                 "field":"label",
                 "band":0.5
              },
              "y":{
                 "scale":"y",
                 "field":"label"
              },
              "defined":{
                 "signal":"isValid(datum[\"label\"]) && isFinite(+datum[\"label\"])"
              }
           }
        }
     },
     {
      "$comment": "Mark used to create Incremented text inside the bar",
        "name":"layer_5_marks",
        "type":"text",
        "style":[
           "text"
        ],
        "interactive":false,
        "from":{
           "data":"data_4"
        },
        "encode":{
           "update":{
              "baseline":{
                 "value":"bottom"
              },
              "dy":{
                 "value":-4
              },
              "fill":{
               "signal":"markSumTextColor"
              },
              "description":{
                 "signal":"\"label: \" + (isValid(datum[\"label\"]) ? datum[\"label\"] : \"\"+datum[\"label\"]) + \"; sum_inc: \" + (format(datum[\"sum_inc\"], \"\"))"
              },
              "x":{
                 "scale":"x",
                 "field":"label",
                 "band":0.5
              },
              "y":{
                 "scale":"y",
                 "field":"sum_inc"
              },
              "text":[
                 {
                    "test":"datum.sum_inc === ''",
                    "value":""
                 },
                 {
                    "signal":"format(datum[\"sum_inc\"], \"$,\")"
                 }
              ],
              "align":{
                 "value":"center"
              }
           }
        }
     },
     {
      "$comment": "Mark used to create decremented text inside the bar",
        "name":"layer_6_marks",
        "type":"text",
        "style":[
           "text"
        ],
        "interactive":false,
        "from":{
           "data":"data_5"
        },
        "encode":{
           "update":{
              "baseline":{
                 "value":"top"
              },
              "dy":{
                 "value":4
              },
              "fill":{
               "signal":"markSumTextColor"
              },
              "description":{
                 "signal":"\"label: \" + (isValid(datum[\"label\"]) ? datum[\"label\"] : \"\"+datum[\"label\"]) + \"; sum_dec: \" + (format(datum[\"sum_dec\"], \"\"))"
              },
              "x":{
                 "scale":"x",
                 "field":"label",
                 "band":0.5
              },
              "y":{
                 "scale":"y",
                 "field":"sum_dec"
              },
              "text":[
                 {
                    "test":"datum.sum_dec === ''",
                    "value":""
                 },
                 {
                    "signal":"format(datum[\"sum_dec\"], \"$,\")"
                 }
              ],
              "align":{
                 "value":"center"
              }
           }
        }
     },
     {
      "$comment": "Mark used to create Incremented text above the bar",
        "name":"layer_7_marks",
        "type":"text",
        "style":[
           "text"
        ],
        "interactive":false,
        "from":{
           "data":"data_6"
        },
        "encode":{
           "update":{
              "baseline":{
                 "value":"bottom"
              },
              "dy":{
                 "value":-4
              },
              "fill":[
                 {
                    "test":"datum.label === 'Begin' || datum.label === 'End'",
                    "value":"#725a30"
                 },
                 {
                    "signal":"markTextColorInc"
                 }
              ],
              "description":{
                 "signal":"\"label: \" + (isValid(datum[\"label\"]) ? datum[\"label\"] : \"\"+datum[\"label\"]) + \"; previous_sum: \" + (format(datum[\"previous_sum\"], \"\")) + \"; inc: \" + (format(datum[\"inc\"], \"$,\"))"
              },
              "x":{
                 "scale":"x",
                 "field":"label",
                 "band":0.5
              },
              "y":{
                 "scale":"y",
                 "field":"previous_sum"
              },
              "text":[
                 {
                    "test":"datum.label === 'Begin' || datum.label === 'End'|| datum.inc == 0",
                    "value":""
                 },
                 {
                    "signal":"format(datum[\"inc\"], \"$,\")"
                 }
              ],
              "align":{
                 "value":"center"
              }
           }
        }
     },
     {
      "$comment": "Mark used to create center text in the bar",
        "name":"layer_8_marks",
        "type":"text",
        "style":[
           "text"
        ],
        "interactive":false,
        "from":{
           "data":"data_7"
        },
        "encode":{
           "update":{
              "baseline":{
                 "value":"middle"
              },
              "fill":{
                 "value":"white"
              },
              "description":{
                 "signal":"\"label: \" + (isValid(datum[\"label\"]) ? datum[\"label\"] : \"\"+datum[\"label\"]) + \"; center_inter: \" + (format(datum[\"center_inter\"], \"\")) + \"; intermediate: \" + (format(datum[\"intermediate\"], \"$,\"))"
              },
              "x":{
                 "scale":"x",
                 "field":"label",
                 "band":0.5
              },
              "y":{
                 "scale":"y",
                 "field":"center_inter"
              },
              "text":[
                 {
                    "test":"datum.intermediate == ''",
                    "value":""
                 },
                 {
                    "signal":"format(datum[\"intermediate\"], \"$,\")"
                 }
              ],
              "align":{
                 "value":"center"
              }
           }
        }
     },
     {
      "$comment": "Mark used to create Decremented text below the bar",
        "name":"layer_9_marks",
        "type":"text",
        "style":[
           "text"
        ],
        "interactive":false,
        "from":{
           "data":"data_6"
        },
        "encode":{
           "update":{
              "baseline":{
                 "value":"top"
              },
              "dy":{
                 "value":4
              },
              "fill":[
                 {
                    "test":"datum.label === 'Begin' || datum.label === 'End'",
                    "value":"#725a30"
                 },
                 {
                    "signal":"markTextColorDec"
                 }
              ],
              "description":{
                 "signal":"\"label: \" + (isValid(datum[\"label\"]) ? datum[\"label\"] : \"\"+datum[\"label\"]) + \"; previous_sum: \" + (format(datum[\"previous_sum\"], \"\")) + \"; dec: \" + (format(datum[\"dec\"], \"$,\"))"
              },
              "x":{
                 "scale":"x",
                 "field":"label",
                 "band":0.5
              },
              "y":{
                 "scale":"y",
                 "field":"previous_sum"
              },
              "text":[
                 {
                    "test":"datum.label === 'Begin' || datum.label === 'End'|| datum.dec == 0",
                    "value":""
                 },
                 {
                    "signal":"format(datum[\"dec\"], \"$,\")"
                 }
              ],
              "align":{
                 "value":"center"
              }
           }
        }
     }
  ],
  "scales":[
     {
        "name":"x",
        "type":"band",
        "domain":{
           "fields":[
              {
                 "data":"data_1",
                 "field":"label"
              },
              {
                 "data":"data_2",
                 "field":"label"
              },
              {
                 "data":"data_3",
                 "field":"label"
              },
              {
                 "data":"data_3",
                 "field":"lead"
              },
              {
                 "data":"source_0",
                 "field":"label"
              },
              {
                 "data":"data_4",
                 "field":"label"
              },
              {
                 "data":"data_5",
                 "field":"label"
              },
              {
                 "data":"data_6",
                 "field":"label"
              },
              {
                 "data":"data_7",
                 "field":"label"
              }
           ]
        },
        "range":[
           0,
           {
              "signal":"width"
           }
        ],
        "paddingInner":0.1,
        "paddingOuter":0.05
     },
     {
        "name":"y",
        "type":"linear",
        "domain":{
           "fields":[
              {
                 "data":"data_1",
                 "field":"previous_sum"
              },
              {
                 "data":"data_1",
                 "field":"sum"
              },
              {
                 "data":"data_2",
                 "field":"intermediate_start"
              },
              {
                 "data":"data_2",
                 "field":"intermediate_end"
              },
              {
                 "data":"data_3",
                 "field":"sum"
              },
              [
                 2000
              ],
              {
                 "data":"source_0",
                 "field":"label"
              },
              {
                 "data":"data_4",
                 "field":"sum_inc"
              },
              {
                 "data":"data_5",
                 "field":"sum_dec"
              },
              {
                 "data":"data_6",
                 "field":"previous_sum"
              },
              {
                 "data":"data_7",
                 "field":"center_inter"
              }
           ]
        },
        "range":[
           {
              "signal":"height"
           },
           0
        ],
        "nice":true,
        "zero":true
     },
     {
        "name":"color",
        "type":"linear",
        "domain":{
           "data":"data_1",
           "field":"values"
        },
        "range":{
           "scheme":{
              "signal":"markBarFill"
           }
        },
        "clamp":false
       
     }
  ],
  "axes":[
     {
        "scale":"x",
        "orient":"bottom",
        "grid":false,
        "title":{"signal":"markXaxisTitle"},
        "domainColor":{
           "signal":"markXaxisDomainColor"
        },
        "labelAngle":{
           "signal":"markLabelAngle"
        },
         "labelLimit":{"signal":"markLabelLimit"},
        "tickSize":{
           "signal":"markTickFontSize"
        },
        "titleAnchor":{
           "signal":"markLabelAnchor"
        },
        "titleFontSize":{
           "signal":"markLabelFontSize"
        },
        "titlePadding":{
           "signal":"markLabelPadding"
        },
        "encode":{
           "labels":{
              "update":{
                 "fill":{
                    "signal":"markLabelColor"
                 },
                 "baseline":{
                    "signal":"(45 < (((markLabelAngle % 360) + 360) % 360) && (((markLabelAngle % 360) + 360) % 360) < 135) || (225 < (((markLabelAngle % 360) + 360) % 360) && (((markLabelAngle % 360) + 360) % 360) < 315) ? \"middle\" :((((markLabelAngle % 360) + 360) % 360) <= 45 || 315 <= (((markLabelAngle % 360) + 360) % 360)) === false ? \"bottom\" : \"top\""
                 }
              }
           }
        },
        "zindex":0
     },
     {
        "scale":"y",
        "orient":"left",
        "grid":false,
        "title":{"signal": "markYaxisTitle"},
        "format":"$,f",
        "formatType":"number",
        "domainColor":{
           "signal":"markYaxisDomainColor"
        },
        "labelAngle":{
           "signal":"markLabelAngle"
        },
        "tickColor":"lightgrey",
        "tickSize":{
           "signal":"markTickFontSize"
        },
        "titleAnchor":{
           "signal":"markLabelAnchor"
        },
        "titleFontSize":{
           "signal":"markLabelFontSize"
        },
        "titlePadding":{
           "signal":"markLabelPadding"
        },
        "labelOverlap":true,
        "tickCount":{
           "signal":"ceil(height/40)"
        },
        "encode":{
           "labels":{
              "update":{
                 "fill":{
                    "signal":"markLabelColor"
                 },
                 "baseline":{
                    "signal":"(((markLabelAngle % 360) + 360) % 360) <= 45 || 315 <= (((markLabelAngle % 360) + 360) % 360) || (135 <= (((markLabelAngle % 360) + 360) % 360) && (((markLabelAngle % 360) + 360) % 360) <= 225) ? null : (45 <= (((markLabelAngle % 360) + 360) % 360) && (((markLabelAngle % 360) + 360) % 360) <= 135) === true ? \"top\" : \"bottom\""
                 }
              }
           }
        },
        "zindex":0
     }
  ],
  "config":{
     "mark":{
        "font":"Open Sans"
     },
     "axis":{
        "labelFont":"Open Sans",
        "titleFont":"Open Sans"
     },
     "legend":{
        "labelFont":"Open Sans",
        "titleFont":"Open Sans"
     },
     "style":{
        "cell":{
           "stroke":null
        },
        "text":{
           "fontWeight":"bold"
        },
        "group-title":{
           "font":"Open Sans",
           "fontWeight":"bold"
        }
     },
     "title":{
        "subtitleFont":"Open Sans"
     }
  }
}

